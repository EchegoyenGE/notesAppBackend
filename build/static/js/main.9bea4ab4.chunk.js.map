{"version":3,"sources":["components/Note.js","services/notes.js","components/Notification.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","baseURL","axios","get","then","response","data","noteObject","post","id","changedNote","url","put","Notification","message","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","map","find","n","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","date","Date","toISOString","Math","random","value","onChange","target","ReactDOM","render","document","getElementById"],"mappings":"4MAeeA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBAEZC,EAASF,EAAKG,UAAa,qBAAuB,iBAExD,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QACN,wBAAQC,QAASL,EAAjB,SAAoCC,Q,gBCT1CK,EAAU,aAmBD,EAhBA,WAEX,OADgBC,IAAMC,IAAIF,GACXG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAc9B,EAXA,SAACC,GAEZ,OADgBL,IAAMM,KAAKP,EAASM,GACrBH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAS9B,EANA,SAACG,EAAIC,GAChB,IAAMC,EAAG,sCAAkCF,GAE3C,OADgBP,IAAMU,IAAID,EAAKD,GAChBN,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCH9BO,EAZM,SAAC,GAAe,IAAdC,EAAa,EAAbA,QACnB,OAAKA,EAKD,qBAAKhB,UAAU,QAAf,SACKgB,IALE,MCaAC,EAfA,WAOX,OACI,sBAAKC,MAPW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACI,uBACA,2ECgFGC,EAtFH,WAEV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,IAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KASAC,qBAPa,WACXC,IACG3B,MAAK,SAAA4B,GACJT,EAASS,QAIC,IAEhB,IAsCMC,EAAeP,EACjBJ,EACAA,EAAMY,QAAO,SAAAxC,GAAI,OAAIA,EAAKG,aAE9B,OACE,gCACE,uCACA,cAAC,EAAD,CAAciB,QAASc,IACvB,8BACE,yBAAQ5B,QAAS,kBAAM2B,GAAYD,IAAnC,kBACUA,EAAmB,YAAR,WAGvB,6BAEIO,EAAYE,KAAI,SAACzC,GAAD,OAAU,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBArC3B,SAACc,GAE1B,IAAMf,EAAO4B,EAAMc,MAAK,SAAAC,GAAC,OAAIA,EAAE5B,KAAOA,KAChCC,EAAW,2BAAOhB,GAAP,IAAaG,WAAYH,EAAKG,YAE/CkC,EACUtB,EAAIC,GACXN,MAAK,SAAAkC,GACNf,EAASD,EAAMa,KAAI,SAAAzC,GAAI,OAAIA,EAAKe,KAAOA,EAAKf,EAAO4C,SAElDC,OAAM,SAAAC,GACLX,EAAgB,QAAD,OAASnC,EAAKK,QAAd,qCACf0C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMY,QAAO,SAAAG,GAAC,OAAIA,EAAE5B,KAAOA,SAsBkBiC,CAAmBhD,EAAKe,MAF3Cf,EAAKe,SAK1C,8BACE,uBAAMkC,SA5DI,SAACC,GACfA,EAAMC,iBAEN,IAAMtC,EAAa,CACjBR,QAASyB,EACTsB,MAAM,IAAIC,MAAOC,cACjBnD,UAAWoD,KAAKC,SAAW,IAG7BnB,EAAmBxB,GAChBH,MAAK,SAAAkC,GACJf,EAAS,GAAD,mBAAKD,GAAL,CAAYgB,KACpBb,EAAW,QAgDX,UACE,uBAAO0B,MAAO3B,EAAS4B,SA9CL,SAACR,GACzBnB,EAAWmB,EAAMS,OAAOF,UA8ClB,oDAGJ,cAAC,EAAD,Q,MClFNG,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.9bea4ab4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    \r\n    const label = (note.important) ? 'make not important' : 'make important'\r\n\r\n    return (\r\n        <li className='note'>\r\n            {note.content}\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import axios from \"axios\"\r\nconst baseURL = '/api/notes'\r\n\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseURL)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = (noteObject) => {\r\n    const request = axios.post(baseURL, noteObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, changedNote) => {\r\n    const url = `http://localhost:3001/notes/${id}`\r\n    const request = axios.put(url, changedNote)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default { getAll, create, update }","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if (!message) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className='error'>\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle} >\r\n            <br />\r\n            <em>Note app, made by Gast√≥n Echegoyen</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport noteService from './services/notes'\r\nimport Notification from './components/Notification'\r\nimport Footer from './components/Footer'\r\n\r\nconst App = () => {\r\n\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState('')\r\n\r\n  const hook = () => {\r\n    noteService.getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }\r\n\r\n  useEffect(hook, [])\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5\r\n    }\r\n\r\n    noteService.create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes([...notes, returnedNote])\r\n        setNewNote('')\r\n      })\r\n  }\r\n  const handleInputChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const toggleImportanceOf = (id) => {\r\n\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = {...note, important: !note.important}\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n      setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(`Note ${note.content} was already removed from server`)\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 4000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const notesToShow = (showAll)\r\n    ? notes\r\n    : notes.filter(note => note.important)\r\n\r\n  return (\r\n    <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage}/>\r\n      <div>\r\n        <button onClick={() => setShowAll(!showAll)} >\r\n          Show {(!showAll) ? 'all' : 'important'}\r\n        </button>\r\n      </div>\r\n      <ul>\r\n        {\r\n          notesToShow.map((note) => <Note\r\n                                      key={note.id}\r\n                                      note={note}\r\n                                      toggleImportance={() => toggleImportanceOf(note.id)} />)\r\n        }\r\n      </ul>\r\n      <div>\r\n        <form onSubmit={addNote}>\r\n          <input value={newNote} onChange={handleInputChange}/>\r\n          <button>Save note</button>\r\n        </form>\r\n      </div>\r\n      <Footer />\r\n    </div> \r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}